<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="inbox_download" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>